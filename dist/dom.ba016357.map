{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","childNodes","array","i","length","push","attr","name","value","arguments","setAttribute","getAttribute","text","textContent","html","style","Object","object","key","class","add","className","classList","has","contain","on","eventName","fn","addEventListener","off","enentName","removeEventListener"],"mappings":"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","file":"dom.ba016357.map","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n    create(string) {\r\n        const container = document.createElement(\"template\");    //template可以容纳任意元素\r\n        container.innerHTML = string.trim();    //标签加空格需【加】trim()消除标签两端的空格，空格属于文本;\r\n        return container.content.firstChild;    //template需【加】first\r\n    },\r\n    after(node, node2) {\r\n        node.parentNode.insertBefore(node2, node.nextSibling);\r\n    },\r\n    before(node, node2) {\r\n        node.parentNode.insertBefore(node2, node);\r\n    },\r\n    append(parent, node){\r\n        parent.appendChild(node)\r\n    },\r\n    wrap(node, parent){               //要在1和2之间插入3，先将div3插在2之前（此时与2同级），再将2移动到3后面（父子级）\r\n         dom.before(node, parent)\r\n         dom.append(parent, node)\r\n    },\r\n    remove(node){\r\n        node.parentNode.removeChild(node)\r\n        return node\r\n    },\r\n    empty(node){\r\n        const {childNodes} = node    //const childNodes = node.childNodes\r\n        const array = []\r\n        for(let i=0; i<childNodes.length; i++){\r\n             \r\n            array.push(childNodes[i])\r\n        } \r\n        return array\r\n    },\r\n    attr(node, name, value){    //重载\r\n        if(arguments.length === 3){\r\n            node.setAttribute(name, value)\r\n        }else if(arguments.length === 2){\r\n            return node.getAttribute(name)\r\n        }\r\n    },\r\n    text(node, string){         //适配\r\n        if('innerText' in node){\r\n            node.innerHTML = string\r\n        }else{\r\n            node.textContent = string\r\n        }\r\n    },\r\n    html(node, string){\r\n        if(arguments.length === 2){\r\n            node.innerHTML = string\r\n        }else if(arguments.length === 1){\r\n            return node.innerHTML\r\n        }\r\n    },\r\n    style(node, name, value){\r\n        if(arguments.length===3){\r\n            //dom.style(div, 'color', 'red')\r\n            node.style[name] = value\r\n        }else if(arguments.length===2){\r\n            if(typeof name === 'string'){\r\n                //dom.style(div, 'color')\r\n                return node.style[name]\r\n            }else if(name instanceof Object){\r\n                //dom.style(div, {color:'red})\r\n                const object = name\r\n                for(let key in object){\r\n                    node.style[key] = object[key]\r\n                }\r\n            }\r\n        }       \r\n    },\r\n    class: {\r\n        add(node, className){\r\n            node.classList.add(className)\r\n        },\r\n        remove(node, className){\r\n            node.classList.remove(className)\r\n        },\r\n        has(node, className){\r\n            return node.classList.contain(className)\r\n        },\r\n    },\r\n    on(node, eventName, fn){\r\n        node.addEventListener(eventName, fn)\r\n    },\r\n    off(node, enentName, fn){\r\n        node.removeEventListener(eventName, fn)\r\n    }\r\n};"]}